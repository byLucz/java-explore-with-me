DROP TABLE IF EXISTS PUBLIC.ParticipationRequest;
DROP TABLE IF EXISTS PUBLIC.EventCompilation;
DROP TABLE IF EXISTS PUBLIC.Mark;
DROP TABLE IF EXISTS PUBLIC.Event;
DROP TABLE IF EXISTS PUBLIC.Compilation;
DROP TABLE IF EXISTS PUBLIC.Category;
DROP TABLE IF EXISTS PUBLIC.Users;
DROP TABLE IF EXISTS PUBLIC.Location;

CREATE TABLE IF NOT EXISTS PUBLIC.Users (
    userId SERIAL PRIMARY KEY,
    name VARCHAR(250) NOT NULL,
    email VARCHAR(254) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS PUBLIC.Category (
    categoryId SERIAL PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS PUBLIC.Compilation (
    compilationId SERIAL PRIMARY KEY,
    title VARCHAR(50) NOT NULL,
    pinned BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.Location (
    locationId SERIAL PRIMARY KEY,
    lat DOUBLE PRECISION NOT NULL,
    lon DOUBLE PRECISION NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.Event (
    eventId SERIAL PRIMARY KEY,
    annotation TEXT NOT NULL,
    categoryId INTEGER REFERENCES PUBLIC.Category (categoryId) ON DELETE RESTRICT,
    created TIMESTAMP WITHOUT TIME ZONE,
    description TEXT NOT NULL,
    eventDate TIMESTAMP WITHOUT TIME ZONE,
    initiatorId INTEGER REFERENCES PUBLIC.Users (userId) ON DELETE CASCADE,
    locationId INTEGER REFERENCES PUBLIC.Location (locationId) ON DELETE CASCADE,
    paid BOOLEAN NOT NULL,
    limits INTEGER NOT NULL,
    modRequests INTEGER NOT NULL,
    published TIMESTAMP WITHOUT TIME ZONE,
    unmodRequests BOOLEAN NOT NULL,
    state INTEGER NOT NULL,
    title VARCHAR(120) NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.ParticipationRequest (
    requestId SERIAL PRIMARY KEY,
    created TIMESTAMP WITHOUT TIME ZONE,
    eventId INTEGER REFERENCES PUBLIC.Event (eventId) ON DELETE CASCADE,
    requesterId INTEGER REFERENCES PUBLIC.Users (userId) ON DELETE CASCADE,
    status INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.EventCompilation (
    pairId SERIAL PRIMARY KEY,
    compilationId INTEGER REFERENCES PUBLIC.Compilation (compilationId) ON DELETE CASCADE,
    eventId INTEGER REFERENCES PUBLIC.Event (eventId) ON DELETE CASCADE,
    CONSTRAINT uniqEventComp UNIQUE (eventId, compilationId)
);